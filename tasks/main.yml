---
# tasks file for lookup_ec2_ami
# Input: ami_image or ami_search_tags
# Output: ami dict if found.

- debug:
    msg: "Role lookup_ec2_ami is called with following variables:"

- debug:
    var: ami_search_tags
    verbosity: 2

- debug:
    var: ami_image
    verbosity: 2

- name: fail if ami_image or ami_search_tags not set
  fail:
    msg: Either ami_image or ami_search_tags must be set
  when:
    - ami_image is not defined or not ami_image
    - ami_search_tags is not defined or not ami_search_tags

- block:
    # lookup_ec2_ami role can run twice in same playbook!!
    # Ensure it's empty before the second run
    - name: set lookup_ec2_ami_ami_search_tags to empty
      set_fact:
        lookup_ec2_ami_ami_search_tags: {}

    - name: create non-empty tags list
      set_fact:
        lookup_ec2_ami_ami_search_tags: "{{ lookup_ec2_ami_ami_search_tags|combine({item.key: item.value}) }}"
      with_dict: "{{ ami_search_tags }}"
      when: ami_search_tags is defined and ami_search_tags and item.value

    - debug:
        var: lookup_ec2_ami_ami_search_tags
        verbosity: 2

    - name: Detect the latest ami image from {{ role_type }} in {{ env }}
      ec2_ami_find:
        region: "{{region}}"
        profile: "{{ ami_search_profile if ami_search_profile is defined and ami_search_profile else profile|default(omit) }}"
        ami_tags: "{{ lookup_ec2_ami_ami_search_tags|default(omit) }}"
        sort: creationDate
        sort_order: descending
        sort_end: 1
      register: ami_find

    - name: set image fact
      set_fact:
        ami: "{{ ami_find.results[0] }}"
      when: ami_find.results is defined and ami_find.results
  when: ami_image is not defined or not ami_image

- block:
    - name: find base AMI from id {{ ami_image }}
      ec2_ami_find:
        ami_id: "{{ ami_image|default(omit) }}"
        region: "{{region}}"
        profile: "{{ ami_search_profile if ami_search_profile is defined and ami_search_profile else profile|default(omit) }}"
        sort: creationDate
        sort_order: descending
        sort_end: 1
      register: ami_find
      when: ami_image is defined and ami_image

    - name: fail when ami_image not found
      fail:
        msg: "Could not find AMI image {{ ami_image }}"
      when: ami_find is not skipped and ami_find.results | length == 0

    - name: set image fact
      set_fact:
        ami: "{{ ami_find.results[0] }}"
      when: ami_find.results is defined and ami_find.results
  when: ami_image is defined and ami_image
